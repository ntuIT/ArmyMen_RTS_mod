///////////////////////////////////////////////////////////////////////////////
//
// Pandemic Studios
//

#include "fx_army_unit_chinook.cfg"

// UNIT
CreateObjectType("army.unit.chinook", "Transport")
{
  GameObj()
  {
    ThinkInterval(1);
    IdleTask("Tasks::UnitConstructor");
    Properties()
    {
      Add("Filter::Army");
      Add("Filter::MechanicalFlyer");
      Add("Filter::Unit");
      Add("Client::NoGroupSelect");
      Add("Client::FacilityBar");
    }
  }
  MapObj()
  {
    GodFile("army_chinook.god");
    PhysicsModel("Flyer");
    TractionType("ground", "flyer");

    ReticleType("Vehicle");

    ArmourClass("flyer");
    HitPoints(800);

    TypeDisplay()
    {
      Image()
      {
        Image("if_chinook_portrait.tga", 0, 0, 42, 42);
        Mode("Centre");
      }
    }

    GenericFX()
    {
      Add("MapObj::Health::Low", "damage.vehicle");
      Add("MapObj::Death", "unit.chinook.death");
      Add("Restore::Target::Process", "restore-small");
      Add("MapObj::AddToMap2", "restore-small-puff");
    }
  }

  UnitObj()
  {
    TopSpeed(50);
    TurnSpeed(270);
    Altitude(3, 20);

    SeeingRange(81);

    ResponseEvents()
    {
      Add("Attack")
      {
        Add("army.unit.chopper_attack-0.wav");
        Add("army.unit.chopper_attack-1.wav");
      }
      Add("Attacked")
      {
        Add("army.unit.chopper_attacked-0.wav");
        Add("army.unit.chopper_attacked-1.wav");
      }
      Add("Move")
      {
        Add("army.unit.chopper_move-0.wav");
        Add("army.unit.chopper_move-1.wav");
        Add("army.unit.chopper_move-2.wav");
      }
      Add("Select")
      {
        Add("army.unit.chopper_select-0.wav");
        Add("army.unit.chopper_select-1.wav");
        Add("army.unit.chopper_select-2.wav");
      }
      Add("Spotted")
      {
        Add("army.unit.chopper_spotted-0.wav");
      }
    }

    CreateSource("resource.blob.vehicle1");
    CommandCost(1);
    ResourceCost()
    {
      Add("Plastic", 250);
      Add("Electricity", 150);
    }
  }
  TransportObj()
  {
    Spaces(10);
    Distance(20);
    Properties()
    {
      Add("Filter::Transportable");
    }
  }
}
