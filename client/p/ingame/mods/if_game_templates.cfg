///////////////////////////////////////////////////////////////////////////////
//
// Pandemic Studios
//
// Shell templates and color groups
//

ConfigureInterface()
{
  //
  // Shell Header text color group
  //

  CreateColorGroup("Game::HeaderText")
  {
    AllFg(255, 255, 220, 255);
    DisabledFg(255, 255, 255, 120);
  }

  //
  // Shell Header text color group with Alpha
  //

  CreateColorGroup("Game::HeaderTextAlpha")
  {
    AllFg(255, 255, 220, 190);
    DisabledFg(255, 255, 255, 120);
  }

  //
  // Plastic text color
  //

  CreateColorGroup("Game::Plastic", "Sys::Texture")
  {
    AllFg(255, 255, 130, 255);
    DisabledFg(255, 255, 170, 0);
  }

  //
  // Electricity text color
  //

  CreateColorGroup("Game::Electricity", "Sys::Texture")
  {
    AllFg(130, 130, 255, 255);
    DisabledFg(170, 170, 255, 0);
  }

  //
  // Shell text color group
  //

  CreateColorGroup("Game::Text")
  {
    AllBg(255, 255, 255, 0);
    AllFg(220, 220, 170, 255);
  }

  //
  // Timer text color group
  //

  CreateColorGroup("Game::TimerText")
  {
    AllFg(255, 50, 0, 255);
  }

  //
  // Blocko Counter text color group
  //

  CreateColorGroup("Game::BlockoText")
  {
    AllFg(255, 200, 0, 255);
  }

  //
  // Shell edit text (with Selected State) color group
  //

  CreateColorGroup("Game::EditText")
  {
    NormalBg(255, 255, 255, 0);
    HilitedBg(255, 255, 0, 0);
    SelectedBg(255, 255, 0, 64);
    HilitedSelBg(255, 255, 0, 64);
    DisabledFg(255, 255, 255, 0);
    DisabledBg(255, 255, 255, 255);
    AllFg(220, 220, 170, 255);
  }

  CreateColorGroup("Game::TitleText", "Sys::Texture")
  {
    AllFg(196, 190, 171, 255);
  }

  DefineControlType("Game::BkgndTexture", "Static")
  {
    ColorGroup("Sys::Texture");
    Geometry("ParentWidth", "ParentHeight");
    Image()
    {
      Image("if_interface_bkgnd.tga");
      Mode("Tile");
    }
  }

  //
  // Border for mp selected state
  //
  CreateSkin("Game::SlotSelect")
  {
    Border()
    {
      Point1(0, 0);
      Point2(0, 0);
    }

    State("Selected", "HilitedSel")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_interface_game.tga", 82, 242, 3, 3);
      }
      Top()
      {
        Image("if_interface_game.tga", 85, 242, 9, 3);
      }
      TopRight()
      {
        Image("if_interface_game.tga", 94, 242, 3, 3);
      }
      Left()
      {
        Image("if_interface_game.tga", 82, 245, 3, 6);
      }
      Right()
      {
        Image("if_interface_game.tga", 94, 245, 3, 6);
      }
      BottomLeft()
      {
        Image("if_interface_game.tga", 82, 251, 3, 3);
      }
      Bottom()
      {
        Image("if_interface_game.tga", 85, 251, 9, 3);
      }
      BottomRight()
      {
        Image("if_interface_game.tga", 94, 251, 3, 3);
      }
    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Standard Shell Border (Cut into the background)
  //
  //

  CreateSkin("Game::CutInBorder")
  {
    Border()
    {
      Point1(1, 1);
      Point2(-1, -1);
    }

    State("All")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 26, 6, 6);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 7, 26, 6, 6);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 26, 6, 6);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 32, 6, 6);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 32, 6, 6);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 38, 6, 6);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 7, 38, 6, 6);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 38, 6, 6);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }
   }

    State("Disabled")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 109, 6, 6);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 9, 109, 2, 3);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 109, 6, 7);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 117, 3, 2);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 16, 117, 3, 2);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 121, 6, 6);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 9, 124, 2, 3);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 121, 6, 6);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 9, 116, 3, 3);
          Mode("Stretch");
          Filter(0);
        }
      }
   }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Standard Shell Border (Raised Background)
  //
  //

  CreateSkin("Game::RaisedBorder")
  {
    State("All")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 1, 4, 4);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 58, 1, 2, 3);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 1, 3, 3);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 3, 3, 1);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 4, 3, 1);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 5, 3, 3);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 59, 5, 2, 3);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 5, 3, 3);
      }
   }
  }

  // --------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Standard shell Listbox with slider configuration
  //
  //

  DefineControlType("Game::SliderListBox", "Listbox")
  {
    Skin("Game::SliderListBox");
    SliderConfig("Reg::Game::ListSlider");
    Style("Transparent");

    ItemConfig()
    {
      ColorGroup("Game::ListEntry");
      Font("System");
      Geometry("AutoSizeY", "ParentWidth");
      // Style("Transparent");
      TextOffset(1, 0);
      Size(-14, 0);
    }

    CreateControl("SliderBkgnd", "Static")
    {
      Geometry("Right", "ParentHeight");
      Size(10, -22);
      Pos(-3, 11);
      Image()
      {
        Image("if_interface_game.tga", 0, 0, 1, 1);
        Mode("Stretch");
        Filter(1);
      }
      CreateControl("SliderBkgndImageTop", "Static")
      {
        Geometry("Top");
        Size(10, 10);
        Image("if_interface_game.tga", 97, 1, 10, 10);
        ColorGroup("Sys::Texture");
      }
      CreateControl("SliderBkgndImageBottom", "Static")
      {
        Geometry("Bottom");
        Size(10, 10);
        Image("if_interface_game.tga", 97, 71, 10, 10);
        ColorGroup("Sys::Texture");
      }
      CreateControl("SliderBkgndImageBody", "Static")
      {
        Geometry("ParentHeight");
        Size(10, -20);
        Pos(0, 10);
        Image()
        {
          Image("if_interface_game.tga", 97, 11, 10, 60);
          Mode("Stretch");
        }
        ColorGroup("Sys::Texture");
      }
    }
  }

  //
  // Up arrow button
  //
  CreateColorGroup("Game::UpArrowButton", "Sys::Texture")
  {
    AllTextures("if_Interface_game.tga", 20, 52, 10, 10);
    HilitedTexture("if_Interface_game.tga", 30, 52, 10, 10);
    HilitedSelTexture("if_Interface_game.tga", 40, 52, 10, 10);
  }

  //
  // Down arrow button
  //
  CreateColorGroup("Game::DownArrowButton", "Sys::Texture")
  {
    AllTextures("if_Interface_game.tga", 51, 52, 10, 10);
    HilitedTexture("if_Interface_game.tga", 61, 52, 10, 10);
    HilitedSelTexture("if_Interface_game.tga", 71, 52, 10, 10);
    DisabledBg(255, 255, 255, 255);
  }

  //
  // List Entry
  //
  CreateColorGroup("Game::ListEntry")
  {
    NormalBg(255, 255, 255, 0);
    HilitedBg(255, 255, 0, 32);
    SelectedBg(255, 255, 0, 64);
    HilitedSelBg(255, 255, 0, 64);
    DisabledBg(255, 255, 255, 0);
    NormalFg(220, 220, 170, 255);
    HilitedFg(255, 255, 220, 255);
    SelectedFg(255, 255, 180, 255);
    HilitedSelFg(255, 255, 180, 255);
    DisabledFg(255, 255, 100, 0);
  }

  CreateSkin("Game::VListSlider")
  {
    ColorGroup("Sys::Texture");

    Border()
    {
      Point1(2, 13);
      Point2(-2, -13);
    }

    State("All")
    {
      Interior()
      {
        Image()
        {
          Image("if_interface_game.tga", 14, 14, 1, 1);
          Mode("Stretch");
          Filter(1);
        }
      }
    }
  }

  //
  //
  // Slider thumb
  //
  //

  CreateSkin("Game::SliderThumbSkin")
  {
    State("All")
    {
      ColorGroup("sys::texture");

      Top()
      {
        Image("if_interface_game.tga", 108, 1, 4, 4);
      }

      Bottom()
      {
        Image("if_interface_game.tga", 108, 77, 4, 4);
      }

      Interior()
      {
        Image()
        {
          Image("if_interface_game.tga", 108, 5, 4, 72);
          Mode("Stretch");
      //    Filter(1);
        }
      }

    }

    State("Hilited", "Selected", "HilitedSel")
    {
      ColorGroup("sys::texture");

      Top()
      {
        Image("if_interface_game.tga", 113, 1, 4, 4);
      }

      Bottom()
      {
        Image("if_interface_game.tga", 113, 77, 4, 4);
      }

      Interior()
      {
        Image()
        {
          Image("if_interface_game.tga", 113, 5, 4, 72);
          Mode("Stretch");
      //    Filter(1);
        }
      }
    }
  }

  //
  // Listbox skin
  //
  CreateSkin("Game::SliderListbox")
  {
    Border()
    {
      Point1(3, 2);
      Point2(0, -2);
    }

    State("All")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 26, 6, 6);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 7, 26, 6, 6);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 26, 6, 6);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 32, 6, 6);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 32, 6, 6);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 38, 6, 6);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 7, 38, 6, 6);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 38, 6, 6);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }
   }

  }

  //
  // Slider thumb button
  //
  CreateRegData("Reg::Game::SliderThumb")
  {
    ThumbButtonConfig("SliderThumb")
    {
      Size(0, 10);
      Pos(1, 0);
      Geometry("ParentWidth");
      Skin("Game::SliderThumbSkin");
      Style("!DropShadow", "!VGradient", "SelectWhenDown");
      ColorGroup("Sys::Texture");
    }
  }

  //
  // List box slider
  //
  CreateRegData("Reg::Game::ListSlider")
  {
    SliderConfig("ListSlider")
    {
      Geometry("ParentHeight", "WinRight");
      Size(8, -2);
      Pos(-4, 1);
      Skin("Game::VListSlider");
      Style("!DropShadow");
      Orientation("Vertical");

      DecButtonConfig("Reg::Game::UpArrowButton");
      IncButtonConfig("Reg::Game::DownArrowButton");
      ThumbConfig("Reg::Game::SliderThumb");
    }
  }

  //
  // Up arrow slider button
  //

  CreateRegData("Reg::Game::UpArrowButton")
  {
    DecButtonConfig("SysBtnUp")
    {
      Size(10, 10);
      Pos(0, 0);
      Geometry("WinTop", "WinHCentre");
      ColorGroup("Game::UpArrowButton");
      Style("!CodeDrawn", "!DropShadow", "!VGradient", "SelectWhenDown");
    }
  }

  //
  // Down arrow slider button
  //

  CreateRegData("Reg::Game::DownArrowButton")
  {
    DecButtonConfig("SysBtnDown")
    {
      Size(10, 10);
      Pos(0, 0);
      Geometry("WinBottom", "WinHCentre");
      ColorGroup("Game::DownArrowButton");
      Style("!CodeDrawn", "!DropShadow", "!VGradient", "SelectWhenDown");
    }
  }

  // --------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Standard SaveGame Listbox (no slider)
  //
  //

  DefineControlType("Game::SaveGameListBox", "Listbox")
  {
    Style("Transparent");

    ItemConfig()
    {
      Skin("Game::Panel");
      ColorGroup("Game::ListEntry");
      Font("System");
      Geometry("ParentWidth");
      TextOffset(1, 0);
      Size(-4, 20);
    }
  }

  // --------------------------------------------------------------------------------------------------------------------------------------------
  //
  //  Standard Shell Button Config
  //
  //

  //
  // Shell Button template
  //
  DefineControlType("Game::Button", "Button")
  {
    Skin("Game::Button");
    ColorGroup("Game::ButtonColor");
    Style("!VGradient", "!DropShadow", "Transparent", "SelectWhenDown");
  }

  //
  // Button text color group
  //

  CreateColorGroup("Game::ButtonColor")
  {
    AllBg(255, 255, 255, 255);
    AllBg(255, 255, 255, 255);
    NormalFg(220, 220, 170, 255);
    HilitedFg(255, 255, 220, 255);
    SelectedFg(255, 255, 220, 255);
    DisabledFg(220, 220, 170, 128);
    HilitedSelFg(255, 255, 220, 255);
    DisabledBg(255, 255, 255, 255);
    SelectedOffset(1, 1);
    SelHilitedOffset(1, 1);
  }

  //
  //  Standard shell button skin
  //

  CreateSkin("Game::Button")
  {
    State("All")
    {
      ColorGroup("Game::ButtonColor");

      TopLeft()
      {
        Image("if_Interface_game.tga", 1, 71, 4, 4);
      }
      Top()
      {
        Image("if_interface_game.tga", 8, 71, 4, 4);
      }
      TopRight()
      {
        Image("if_interface_game.tga", 20, 71, 6, 5);
      }
      Left()
      {
        Image("if_interface_game.tga", 1, 77, 4, 4);
      }
      Right()
      {
        Image("if_interface_game.tga", 22, 77, 4, 4);
      }
      BottomLeft()
      {
        Image("if_interface_game.tga", 1, 86, 5, 6);
      }
      Bottom()
      {
        Image("if_interface_game.tga", 8, 88, 4, 4);
      }
      BottomRight()
      {
        Image("if_interface_game.tga", 20, 86, 6, 6);
      }

      Interior()
      {
        Image()
        {
          Image("if_interfacealpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(1);
          Pos(4, 4);
          Size(-8, -8);
        }
      }
    }

    State("Hilited")
    {
      ColorGroup("Game::ButtonColor");

      TopLeft()
      {
        Image("if_interface_game.tga", 27, 71, 4, 4);
      }
      Top()
      {
        Image("if_interface_game.tga", 35, 71, 4, 4);
      }
      TopRight()
      {
        Image("if_interface_game.tga", 46, 71, 6, 5);
      }
      Left()
      {
        Image("if_interface_game.tga", 27, 77, 4, 4);
      }
      Right()
      {
        Image("if_interface_game.tga", 48, 77, 4, 4);
      }
      BottomLeft()
      {
        Image("if_interface_game.tga", 27, 86, 5, 6);
      }
      Bottom()
      {
        Image("if_interface_game.tga", 36, 88, 4, 4);
      }
      BottomRight()
      {
        Image("if_interface_game.tga", 46, 86, 6, 6);
      }

      Interior()
      {
        Image()
        {
          Image("if_interfacealpha_game.tga", 21, 10, 6, 6);
          Mode("Stretch");
          Filter(1);
          Pos(4, 4);
          Size(-8, -8);
        }
      }
    }

    // For selected and hilitedsel states
    State("Selected", "HilitedSel")
    {
      ColorGroup("Game::ButtonColor");

      TopLeft()
      {
        Image("if_interface_game.tga", 53, 71, 5, 5);
      }
      Top()
      {
        Image("if_interface_game.tga", 61, 71, 5, 5);
      }
      TopRight()
      {
        Image("if_interface_game.tga", 73, 71, 5, 5);
      }
      Left()
      {
        Image("if_interface_game.tga", 53, 77, 5, 5);
      }
      Right()
      {
        Image("if_interface_game.tga", 74, 77, 4, 4);
      }
      BottomLeft()
      {
        Image("if_interface_game.tga", 53, 87, 5, 5);
      }
      Bottom()
      {
        Image("if_interface_game.tga", 62, 88, 4, 4);
      }
      BottomRight()
      {
        Image("if_interface_game.tga", 72, 86, 6, 6);
      }

      Interior()
      {
        Image()
        {
          Image("if_interfacealpha_game.tga", 21, 10, 6, 6);
          Mode("Stretch");
          Filter(1);
          Pos(6, 6);
          Size(-10, -10);
        }
      }
    }
    // For disabled state

    State("Disabled")
    {
      ColorGroup("Game::ButtonColor");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 109, 6, 6);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 9, 109, 2, 3);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 109, 6, 7);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 117, 3, 2);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 16, 117, 3, 2);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 1, 121, 6, 6);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 9, 124, 2, 3);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 13, 121, 6, 6);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 9, 116, 3, 3);
          Mode("Stretch");
          Filter(0);
        }
      }

    }
  }

  // ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //  Decorative Panelling
  //

  CreateSkin("Game::Panel")
  {

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 0, 0, 3, 3);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 2, 0, 1, 2);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 3, 0, 3, 3);
      }
      Left()
      {
        Image("if_interfacealpha_game.tga", 0, 2, 2, 1);
      }
      Right()
      {
        Image("if_interfacealpha_game.tga", 4, 2, 2, 1);
      }
      BottomLeft()
      {
        Image("if_interfacealpha_game.tga", 0, 3, 3, 3);
      }
      Bottom()
      {
        Image("if_interfacealpha_game.tga", 2, 4, 1, 2);
      }
      BottomRight()
      {
        Image("if_interfacealpha_game.tga", 3, 3, 3, 3);
      }
    }
  }

  CreateSkin("Game::DarkPanel", "Game::Panel")
  {
    Border()
    {
      Point1(1, 1);
      Point2(-2, -2);
    }

    State("All")
    {
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }
    }
  }

  // ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Shell Drop list minus the listbox config
  //
  //
  CreateRegData("Reg::Game::DropList")
  {
    Skin("Game::SolidClient");

    Container()
    {
      Geometry("Left", "Bottom", "VExternal", "HInternal", "AlignToWidth");
      Style("Transparent");
    }
    DropButton("SysBtnDropList")
    {
      Size(1, 1);
      Geometry("Right", "VCentre");
      Style("!CodeDrawn", "!DropShadow", "!VGradient", "SelectWhenDown", "Transparent");
    }
    Current("Button")
    {
      Geometry("ParentWidth", "ParentHeight");
      ColorGroup("Game::ButtonColor");
      Style("Transparent", "!DropShadow");
      Font("System");
      JustifyText("Centre");
      TextOffset(-1, 0);
    }
  }


  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Shell Default Client border
  //
  //

  CreateSkin("Game::Client")
  {

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 10, 8, 3, 3);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 14, 8, 1, 3);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 17, 8, 3, 3);
      }
      Left()
      {
        Image("if_interfacealpha_game.tga", 10, 12, 3, 1);
      }
      Right()
      {
        Image("if_interfacealpha_game.tga", 17, 12, 3, 1);
      }
      BottomLeft()
      {
        Image("if_interfacealpha_game.tga", 10, 14, 4, 4);
      }
      Bottom()
      {
        Image("if_interfacealpha_game.tga", 15, 15, 1, 3);
      }
      BottomRight()
      {
        Image("if_interfacealpha_game.tga", 17, 15, 3, 3);
      }
    }
  }

  CreateSkin("Game::SolidClient", "Game::Client")
  {
    State("All")
    {
      Interior()
      {
        Image()
        {
          Image("if_interface_bkgnd.tga");
          Mode("Tile");
        }
      }
    }
  }

  CreateSkin("Game::SolidClientListBox")
  {
    Border()
    {
      Point1(3, 3);
      Point2(-3, -3);
    }

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interface_game.tga", 2, 51, 3, 3);
      }
      Top()
      {
        Image("if_interface_game.tga", 5, 51, 1, 3);
      }
      TopRight()
      {
        Image("if_interface_game.tga", 7, 51, 3, 3);
      }
      Left()
      {
        Image("if_interface_game.tga", 2, 54, 3, 1);
      }
      Right()
      {
        Image("if_interface_game.tga", 7, 54, 3, 1);
      }
      BottomLeft()
      {
        Image("if_interface_game.tga", 2, 55, 3, 3);
      }
      Bottom()
      {
        Image("if_interface_game.tga", 6, 55, 1, 3);
      }
      BottomRight()
      {
        Image("if_interface_game.tga", 7, 55, 3, 3);
      }

      Interior()
      {
        Image()
        {
          Image("if_interface_bkgnd.tga");
          Mode("Tile");
        }
      }

    }

  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Shell Default Client border with background - with no bottom border texture
  //
  //

  CreateSkin("Game::SolidClientNoBottom")
  {
    ColorGroup("Sys::Texture");

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 10, 8, 3, 3);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 14, 8, 1, 3);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 17, 8, 3, 3);
      }
      Left()
      {
        Image("if_interfacealpha_game.tga", 10, 12, 3, 1);
      }
      Right()
      {
        Image("if_interfacealpha_game.tga", 17, 12, 3, 1);
      }
      Interior()
      {
        Image()
        {
          Image("if_interface_bkgnd.tga");
          Mode("Tile");
        }
      }

    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Shell Default Client border with background - with no top border texture
  //
  //

  CreateSkin("Game::SolidClientNoTop")
  {
    ColorGroup("Sys::Texture");

    State("All")
    {
      ColorGroup("Sys::Texture");

      Left()
      {
        Image("if_interfacealpha_game.tga", 10, 12, 3, 1);
      }
      Right()
      {
        Image("if_interfacealpha_game.tga", 17, 12, 3, 1);
      }
      BottomLeft()
      {
        Image("if_interfacealpha_game.tga", 10, 14, 4, 4);
      }
      Bottom()
      {
        Image("if_interfacealpha_game.tga", 15, 15, 1, 3);
      }
      BottomRight()
      {
        Image("if_interfacealpha_game.tga", 17, 15, 3, 3);
      }
      Interior()
      {
        Image()
        {
          Image("if_interface_bkgnd.tga");
          Mode("Tile");
        }
      }

    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Game border for headers - Minimap...both ends
  //
  //

  CreateSkin("Game::Header")
  {
    Border()
    {
      Point1(23, 0);
      Point2(-23, 0);
    }

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 73, 27, 24, 19);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 73, 23, 22, 4);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 71, 1, 24, 19);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }

    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Game border for headers - Squads...no right end
  //
  //

  CreateSkin("Game::HeaderSquads")
  {
    Border()
    {
      Point1(23, 0);
      Point2(0, 0);
    }

    State("All")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 73, 27, 24, 19);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 73, 23, 22, 4);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }

    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Game border for header - Construction - no left end
  //
  //

  CreateSkin("Game::HeaderConstruction")
  {
    Border()
    {
      Point1(0, 0);
      Point2(-23, 0);
    }

    State("All")
    {
      ColorGroup("Sys::Texture");

      Top()
      {
        Image("if_interfacealpha_game.tga", 73, 23, 22, 4);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 71, 1, 24, 19);
      }
      Interior()
      {
        Image()
        {
          Image("if_InterfaceAlpha_game.tga", 7, 32, 6, 6);
          Mode("Stretch");
          Filter(0);
        }
      }

    }
  }

  //
  //
  // Droplist Listbox
  //
  //

  DefineControlType("Game::DropListBox", "Listbox")
  {
    Pos(0, -1);
    Skin("Game::SolidClientListBox");
    SliderConfig("Reg::Game::ListSlider");
    Style("Transparent");

    ItemConfig()
    {
      ColorGroup("Game::ListEntry");
      Font("System");
      Geometry("AutoSizeY", "ParentWidth");
      // Style("Transparent");
      TextOffset(3, 0);
      Size(-10, 0);
    }

    CreateControl("SliderBkgnd", "Static")
    {
      Geometry("Right", "ParentHeight");
      Size(10, -22);
      Pos(0, 11);
      Image()
      {
        Image("if_interface_game.tga", 0, 0, 1, 1);
        Mode("Stretch");
        Filter(1);
      }
      CreateControl("SliderBkgndImageTop", "Static")
      {
        Geometry("Top");
        Size(10, 10);
        Image("if_interface_game.tga", 97, 1, 10, 10);
        ColorGroup("Sys::Texture");
      }
      CreateControl("SliderBkgndImageBottom", "Static")
      {
        Geometry("Bottom");
        Size(10, 10);
        Image("if_interface_game.tga", 97, 71, 10, 10);
        ColorGroup("Sys::Texture");
      }
      CreateControl("SliderBkgndImageBody", "Static")
      {
        Geometry("ParentHeight");
        Size(10, -20);
        Pos(0, 10);
        Image()
        {
          Image("if_interface_game.tga", 97, 11, 10, 60);
          Mode("Stretch");
        }
        ColorGroup("Sys::Texture");
      }
    }
  }

  // -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Shell Horizontal slider bar
  //
  //

  DefineControlType("Game::HSlider", "Slider")
  {
    Skin("Game::CutInBorder");
    Style("NoDrawClient");
    ThumbConfig("Reg::Game::HSliderThumb");
  }

  //
  // Horizntal Slider thumb button
  //

  CreateRegData("Reg::Game::HSliderThumb")
  {
    ThumbButtonConfig("SliderThumb")
    {
      Skin("Game::HSliderThumbSkin");
      Geometry("ParentHeight", "ParentWidth", "Square");
      Style("!DropShadow", "!VGradient", "SelectWhenDown");
    }
  }

  //
  //
  // Horizontal Slider thumb Skin
  //
  //

  CreateSkin("Game::HSliderThumbSkin")
  {

    Border()
    {
      Point1(3, 2);
      Point2(-3, -2);
    }

    State("All")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_interface_game.tga", 1, 35, 3, 2);
      }

      Top()
      {
        Image("if_interface_game.tga", 4, 35, 9, 2);
      }

      TopRight()
      {
        Image("if_interface_game.tga", 13, 35, 3, 2);
      }

      Right()
      {
        Image("if_interface_game.tga", 13, 37, 3, 11);
      }

      Left()
      {
        Image("if_interface_game.tga", 1, 37, 3, 11);
      }

      Bottom()
      {
        Image("if_interface_game.tga", 4, 48, 9, 2);
      }

      BottomLeft()
      {
        Image("if_interface_game.tga", 1, 48, 3, 2);
      }

      BottomRight()
      {
        Image("if_interface_game.tga", 13, 48, 3, 2);
      }

      Interior()
      {
        Image()
        {
          Image("if_interface_game.tga", 4, 37, 7, 9);
        }
      }
    }

    State("Hilited", "Selected", "HilitedSel")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_interface_game.tga", 17, 35, 3, 2);
      }

      Top()
      {
        Image("if_interface_game.tga", 20, 35, 9, 2);
      }

      TopRight()
      {
        Image("if_interface_game.tga", 29, 35, 3, 2);
      }

      Right()
      {
        Image("if_interface_game.tga", 29, 37, 3, 11);
      }

      Left()
      {
        Image("if_interface_game.tga", 17, 37, 3, 11);
      }

      Bottom()
      {
        Image("if_interface_game.tga", 20, 48, 9, 2);
      }

      BottomLeft()
      {
        Image("if_interface_game.tga", 17, 48, 3, 2);
      }

      BottomRight()
      {
        Image("if_interface_game.tga", 29, 48, 3, 2);
      }

      Interior()
      {
        Image()
        {
          Image("if_interface_game.tga", 20, 37, 7, 9);
        }
      }
    }
  }

  // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  //
  // Campaign Slot Border
  //
  //

  CreateSkin("Game::CampaignSlotBorder")
  {
    State("All")
    {
      ColorGroup("sys::texture");

      TopLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 1, 4, 4);
      }
      Top()
      {
        Image("if_InterfaceAlpha_game.tga", 58, 1, 2, 3);
      }
      TopRight()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 1, 3, 3);
      }
      Left()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 3, 3, 1);
      }
      Right()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 4, 3, 1);
      }
      BottomLeft()
      {
        Image("if_InterfaceAlpha_game.tga", 56, 5, 3, 3);
      }
      Bottom()
      {
        Image("if_InterfaceAlpha_game.tga", 59, 5, 2, 3);
      }
      BottomRight()
      {
        Image("if_InterfaceAlpha_game.tga", 61, 5, 3, 3);
      }
    }

    State("Disabled")
    {
      ColorGroup("Sys::Texture");

      TopLeft()
      {
        Image("if_interfacealpha_game.tga", 32, 8, 3, 3);
      }
      Top()
      {
        Image("if_interfacealpha_game.tga", 34, 8, 1, 2);
      }
      TopRight()
      {
        Image("if_interfacealpha_game.tga", 35, 8, 3, 3);
      }
      Left()
      {
        Image("if_interfacealpha_game.tga", 32, 10, 2, 1);
      }
      Right()
      {
        Image("if_interfacealpha_game.tga", 36, 10, 2, 1);
      }
      BottomLeft()
      {
        Image("if_interfacealpha_game.tga", 32, 11, 3, 3);
      }
      Bottom()
      {
        Image("if_interfacealpha_game.tga", 34, 12, 1, 2);
      }
      BottomRight()
      {
        Image("if_interfacealpha_game.tga", 35, 11, 3, 3);
      }
    }

  }

  //
  // Messagebox window
  //
  DefineControlType("Std::MessageBox::Window", "MessageBoxWindow")
  {
    Skin("Game::SolidClient");
    Style("Transparent", "Titlebar", "Modal", "NoSysButtons", "AdjustWindow");
    Geometry("HCentre", "VCentre");
    Font("System");
    TitleBarConfig("Reg::Game::WindowTitle");

    CreateControl("Panel", "Static")
    {
      Skin("Game::Panel");
      Geometry("ParentWidth", "ParentHeight", "VCentre", "HCentre");
      Style("Transparent");
      Size(-10, -10);

      CreateControl("RivetTL", "Static")
      {
        Pos(3, 3);
        ColorGroup("Sys::Texture");
        Image("if_interface_game.tga", 63, 6, 2, 2);
        Size(2, 2);
      }

      CreateControl("RivetTR", "Static")
      {
        Geometry("Right");
        Pos(-3, 3);
        ColorGroup("Sys::Texture");
        Image("if_interface_game.tga", 63, 6, 2, 2);
        Size(2, 2);
      }

      CreateControl("RivetBR", "Static")
      {
        Geometry("Bottom", "Right");
        Pos(-3, -3);
        ColorGroup("Sys::Texture");
        Image("if_interface_game.tga", 63, 6, 2, 2);
        Size(2, 2);
      }

      CreateControl("RivetBL", "Static")
      {
        Geometry("Bottom");
        Pos(3, -3);
        ColorGroup("Sys::Texture");
        Image("if_interface_game.tga", 63, 6, 2, 2);
        Size(2, 2);
      }
    }
  }

  //
  // Messagebox text
  //
  DefineControlType("Std::MessageBox::Text", "Static")
  {
    ColorGroup("Game::Text");
    Font("System");
    Style("Transparent");
    Geometry("HCentre", "ParentWidth", "AutoSizeY");
    Size(-12, 0);
  }

  //
  // Messagebox button
  //
  DefineControlType("Std::MessageBox::Button", "Button")
  {
    ReadTemplate("Game::Button");
    Font("System");
    Size(80, 25);
    Pos(0, 2);
  }

  //
  // Window title - appears at the top of a window, duh!
  //
  CreateRegData("Reg::Game::WindowTitle")
  {
    TitleBarConfig("WindowTitle")
    {
      Skin("Game::Header");
      Font("HeaderSmall");
      Geometry("HCentre", "ParentWidth");
      Style("Transparent");
      ColorGroup("Game::HeaderText");
      JustifyText("Centre");
      TextOffset(0, 2);
      Size(-10, 19);
      Pos(0, -19);
    }
  }
}